<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address.Text" xml:space="preserve">
    <value>Indirizzo</value>
  </data>
  <data name="AffiliateCreateError.Text" xml:space="preserve">
    <value>Impossibile salvare l'affiliazione. Stato: {0}</value>
  </data>
  <data name="AffiliateID.Text" xml:space="preserve">
    <value>ID affiliato</value>
  </data>
  <data name="Approved.Text" xml:space="preserve">
    <value>Approvato</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Commission.Text" xml:space="preserve">
    <value>Commissione</value>
  </data>
  <data name="Confirmation.Text" xml:space="preserve">
    <value>Conferma</value>
  </data>
  <data name="cvPasswordConfirmation.ErrorMessage" xml:space="preserve">
    <value>È richiesta la conferma della password e deve corrispondere alla prima password.</value>
  </data>
  <data name="DefaultReferralDays.Text" xml:space="preserve">
    <value>Giorni di riferimento predefiniti</value>
  </data>
  <data name="DefaultReferralDaysHelp.Text" xml:space="preserve">
    <value>Utilizza zero per assegnare in modo permanente i clienti alla prima affiliazione.</value>
  </data>
  <data name="DriversLicense.Text" xml:space="preserve">
    <value>Patente di guida</value>
  </data>
  <data name="DuplicateAffiliateID.Text" xml:space="preserve">
    <value>L'ID affiliato scelto è già stato preso. Si prega di provarne uno nuovo.</value>
  </data>
  <data name="DuplicateEmail.Text" xml:space="preserve">
    <value>Email già esistente.</value>
  </data>
  <data name="DuplicateUsername.Text" xml:space="preserve">
    <value>Il nome utente esiste già.</value>
  </data>
  <data name="EditAffiliate.Text" xml:space="preserve">
    <value>Modifica affiliato</value>
  </data>
  <data name="Email.Text" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="Enabled.Text" xml:space="preserve">
    <value>Abilitato</value>
  </data>
  <data name="FlatRateCommission.Text" xml:space="preserve">
    <value>Commissione forfettaria</value>
  </data>
  <data name="InvalidPassword.Text" xml:space="preserve">
    <value>Password non valida. La lunghezza della password deve essere maggiore di {0} caratteri.</value>
  </data>
  <data name="NewAffiliate.Text" xml:space="preserve">
    <value>Nuova affiliazione</value>
  </data>
  <data name="Notes.Text" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PercentageOfSale.Text" xml:space="preserve">
    <value>Percentuale di vendite</value>
  </data>
  <data name="ReferralAffiliateID.Text" xml:space="preserve">
    <value>Referral ID affiliato</value>
  </data>
  <data name="revEmail.ErrorMessage" xml:space="preserve">
    <value>L'indirizzo di posta elettronica non è in un formato valido.</value>
  </data>
  <data name="rfvAffiliateID.ErrorMessage" xml:space="preserve">
    <value>È richiesto un ID affiliato.</value>
  </data>
  <data name="rfvEmail.ErrorMessage" xml:space="preserve">
    <value>È richiesto l'indirizzo di posta elettronica.</value>
  </data>
  <data name="rfvPassword.ErrorMessage" xml:space="preserve">
    <value>È richiesta la password.</value>
  </data>
  <data name="rfvUsername.ErrorMessage" xml:space="preserve">
    <value>È richiesto il nome utente.</value>
  </data>
  <data name="SampleURL.Text" xml:space="preserve">
    <value>URL di esempio</value>
  </data>
  <data name="SaveChanges.Text" xml:space="preserve">
    <value>Salva Modifiche</value>
  </data>
  <data name="TaxID.Text" xml:space="preserve">
    <value>ID TAssa</value>
  </data>
  <data name="UnknownReferralAffiliateID.Text" xml:space="preserve">
    <value>L'ID affiliato referral non è riconosciuto, ma l'affiliato è stato salvato con successo.</value>
  </data>
  <data name="Username.Text" xml:space="preserve">
    <value>Nome Utente</value>
  </data>
  <data name="valAffiliateID.ErrorMessage" xml:space="preserve">
    <value>L'ID affiliato può contenere solo simboli alfanumerici e '-', '_'.</value>
  </data>
  <data name="valReferralID.ErrorMessage" xml:space="preserve">
    <value>L'ID affiliazione referral può contenere solo simboli alfanumerici e '-', '_'.</value>
  </data>
  <data name="ViewUserProfile.Text" xml:space="preserve">
    <value>Visualizza profilo utente in CMS</value>
  </data>
  <data name="WebsiteUrl.Text" xml:space="preserve">
    <value>URL del sito</value>
  </data>
</root>