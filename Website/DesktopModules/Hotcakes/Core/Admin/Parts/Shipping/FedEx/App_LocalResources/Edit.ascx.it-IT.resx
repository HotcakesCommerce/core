<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumber.Text" xml:space="preserve">
    <value>Numero di conto</value>
  </data>
  <data name="Adjustments.Text" xml:space="preserve">
    <value>Regolazioni</value>
  </data>
  <data name="AdjustPriceBy.Text" xml:space="preserve">
    <value>Regola il prezzo di</value>
  </data>
  <data name="Amount.Text" xml:space="preserve">
    <value>Quantità</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Salva Modifiche</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Ottieni una tariffa</value>
  </data>
  <data name="BusinessServiceCenter.Text" xml:space="preserve">
    <value>Centro servizi Business</value>
  </data>
  <data name="cvAdjustmentTextBox.ErrorMessage" xml:space="preserve">
    <value>Il prezzo di rettifica deve essere in un formato numerico.</value>
  </data>
  <data name="DefaultPackaging.Text" xml:space="preserve">
    <value>Imballaggio predefinito</value>
  </data>
  <data name="Destination.Text" xml:space="preserve">
    <value>Destinazione</value>
  </data>
  <data name="DiagnosticsMode.Text" xml:space="preserve">
    <value>Modalità diagnostica</value>
  </data>
  <data name="DropBox.Text" xml:space="preserve">
    <value>Drop Box</value>
  </data>
  <data name="DropOffType.Text" xml:space="preserve">
    <value>Drop Off Type</value>
  </data>
  <data name="EditShippingMethod.Text" xml:space="preserve">
    <value>Modifica metodo di spedizione: FedEx</value>
  </data>
  <data name="FedEx10kgBox.Text" xml:space="preserve">
    <value>FedEx Scatola 10kg</value>
  </data>
  <data name="FedEx25kgBox.Text" xml:space="preserve">
    <value>FedEx Scatola 25kg</value>
  </data>
  <data name="FedExBox.Text" xml:space="preserve">
    <value>FedEx Scatola</value>
  </data>
  <data name="FedExEnvelope.Text" xml:space="preserve">
    <value>FedEx Lettera</value>
  </data>
  <data name="FedExPak.Text" xml:space="preserve">
    <value>FedEx Pak</value>
  </data>
  <data name="FedExSiteMessage.Text" xml:space="preserve">
    <value>Per ottenere una chiave di produzione FedEx / password / account / contatore</value>
  </data>
  <data name="FedExTube.Text" xml:space="preserve">
    <value>FedEx Tube</value>
  </data>
  <data name="FinishedTest.Text" xml:space="preserve">
    <value>Test del tasso finito a {0}</value>
  </data>
  <data name="ForceResidentialRates.Text" xml:space="preserve">
    <value>Forza tariffe residenziali</value>
  </data>
  <data name="GlobalSettings.Text" xml:space="preserve">
    <value>Impostazioni globali</value>
  </data>
  <data name="Height.Text" xml:space="preserve">
    <value>Altezza</value>
  </data>
  <data name="HighlightColor.Text" xml:space="preserve">
    <value>Evidenzia Colore</value>
  </data>
  <data name="Key.Text" xml:space="preserve">
    <value>Chiave</value>
  </data>
  <data name="Length.Text" xml:space="preserve">
    <value>Lunghezza</value>
  </data>
  <data name="Log.Text" xml:space="preserve">
    <value>LOG</value>
  </data>
  <data name="MeterNumber.Text" xml:space="preserve">
    <value>Metro</value>
  </data>
  <data name="Name.Text" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="Package.Text" xml:space="preserve">
    <value>Pacchetto</value>
  </data>
  <data name="Weight.Text" xml:space="preserve">
    <value>Peso</value>
  </data>
  <data name="Packaging.Text" xml:space="preserve">
    <value>Confezione</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Percentage.Text" xml:space="preserve">
    <value>Percentuale</value>
  </data>
  <data name="RateFound.Text" xml:space="preserve">
    <value>Tasso trovato: {0} | {1} ({2}, {3})</value>
  </data>
  <data name="RegularPickup.Text" xml:space="preserve">
    <value>Regular Pickup</value>
  </data>
  <data name="RequestCourier.Text" xml:space="preserve">
    <value>Richiedi corriere</value>
  </data>
  <data name="rfvAdjustmentTextBox.ErrorMessage" xml:space="preserve">
    <value>Il prezzo di adeguamento è richiesto.</value>
  </data>
  <data name="Service.Text" xml:space="preserve">
    <value>Servizio</value>
  </data>
  <data name="ShippingZone.Text" xml:space="preserve">
    <value>Zona di spedizione</value>
  </data>
  <data name="Source.Text" xml:space="preserve">
    <value>Origine</value>
  </data>
  <data name="StartingTest.Text" xml:space="preserve">
    <value>Test della frequenza iniziale a {0}</value>
  </data>
  <data name="Station.Text" xml:space="preserve">
    <value>Stazione</value>
  </data>
  <data name="TestRates.Text" xml:space="preserve">
    <value>Tariffe di prova</value>
  </data>
  <data name="UseDevelopmentServiceUrl.Text" xml:space="preserve">
    <value>Utilizzare l'URL del servizio di sviluppo</value>
  </data>
  <data name="UseNegotiatedRates.Text" xml:space="preserve">
    <value>Usa tariffe negoziate</value>
  </data>
  <data name="Width.Text" xml:space="preserve">
    <value>Larghezza</value>
  </data>
  <data name="YourPackaging.Text" xml:space="preserve">
    <value>Il tuo imballaggio</value>
  </data>
</root>